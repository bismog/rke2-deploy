---
- name: Make sure directory '~/.kube' exists
  file:
    path: ~/.kube
    state: directory

- name: Create symlink to rke2 config
  file:
    src: "/etc/rancher/rke2/rke2.yaml"
    path: "~/.kube/config"
    state: link

- name: Install kubernetes library
  ansible.builtin.pip:
    name: "kubernetes"
    extra_args: "-i https://mirrors.aliyun.com/pypi/simple"

- name: Prepare cert-manager.crds.yaml
  template:
    src: "cert-manager.crds.yaml"
    dest: "/tmp/cert-manager.crds.yaml"
  when: enable_cert_manager

- name: Install cert manager CRD
  kubernetes.core.k8s:
    state: present
    src: "/tmp/cert-manager.crds.yaml"
  when: enable_cert_manager

# https://luislogs.com/posts/re-engineering-the-homelab-with-iac-and-kubernetes-an-overview/
- name: Install app charts
  kubernetes.core.helm:
    name: "{{ item.name }}"
    namespace: "{{ item.namespace }}"
    create_namespace: 'yes'
    chart_ref: "http://{{ rke2_api_ip }}:{{ chart_repo_port }}/{{ item.name }}-{{ item.version }}.tgz"
    timeout: '10m'
  when: 
    - item.enable
    - item.name != 'rancher'
  with_items: "{{ app_charts }}"


- name: Install harbor
  kubernetes.core.helm:
    name: "{{ harbor.name }}"
    namespace: "{{ harbor.namespace }}"
    create_namespace: 'yes'
    chart_ref: "http://{{ rke2_api_ip }}:{{ chart_repo_port }}/{{ harbor.name }}-{{ harbor.version }}.tgz"
    values:
      # expose:
      #   type: "{{ harbor.service_type }}"
      #   tls:
      #     auto:
      #       commonName: "{{ harbor.hostname }}"
      persistence:
        persistentVolumeClaim:
          registry:
            storageClass: "{{ harbor.storageclass }}"
          jobservice:
            jobLog:
              storageClass: "{{ harbor.storageclass }}"
          database:
            storageClass: "{{ harbor.storageclass }}"
          redis:
            storageClass: "{{ harbor.storageclass }}"
          trivy:
            storageClass: "{{ harbor.storageclass }}"
  when: 
    - harbor.enable

- name: Install rancher
  kubernetes.core.helm:
    name: "{{ rancher.name }}"
    namespace: "{{ rancher.namespace }}"
    create_namespace: 'yes'
    chart_ref: "http://{{ rke2_api_ip }}:{{ chart_repo_port }}/{{ rancher.name }}-{{ rancher.version }}.tgz"
    timeout: '10m'
    values:
      service:
        type: "{{ rancher.service_type }}"
      hostname: "{{ rancher.hostname }}"
  when: 
    - rancher.enable

- name: Install nfs provisioner
  kubernetes.core.helm:
    name: "{{ nfs_provisioner.name }}"
    namespace: "{{ nfs_provisioner.namespace }}"
    create_namespace: 'yes'
    chart_ref: "http://{{ rke2_api_ip }}:{{ chart_repo_port }}/{{ nfs_provisioner.name }}-{{ nfs_provisioner.version }}.tgz"
    timeout: '10m'
    values:
      service:
        type: "{{ nfs_provisioner.service_type }}"
      nfs:
        server: "{{ nfs_provisioner.server }}"
        path: "{{ nfs_provisioner.path }}"
  when: 
    - nfs_provisioner.enable
